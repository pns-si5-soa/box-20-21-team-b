# Deploy
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mission
    boxb: boxb-ground
  name: mission
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mission
      boxb: boxb-ground
  template:
    metadata:
      labels:
        app: mission
        boxb: boxb-ground
    spec:
      containers:
      - image: boxb/mission:latest
        name: mission
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /mission/ok
            port: 80
          initialDelaySeconds: 20
          timeoutSeconds: 3
          periodSeconds: 30
          failureThreshold: 20
        env:
        - name: PORT
          value: "80"
        - name: ROCKET_HOST
          value: "rocket"
        - name: ROCKET_PORT
          value: "80"
        - name: WEATHER_HOST
          value: "weather"
        - name: WEATHER_PORT
          value: "80"
        - name: MONGO_HOST
          value: mongo
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_BD
          value: "blue_origin"
        - name: MODULES_HOST
          value: "mission"
        - name: MODULES_PORT
          value: "80"
---

# Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mission
  name: mission
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: mission
#  type: NodePort # Uncomment if doesnt match I
