version: '3.8'

services:
  ## WEATHER INFO SERVICE
  weather:
    build: ./service-weather
    image: boxb/weather
    restart: unless-stopped
    container_name: weather
    environment:
      - PORT=3000
      - MISSION_HOST=mission
      - MISSION_PORT=3002
    volumes:
      - ./service-weather/src/:/app/src/ # FOR HOT RELOAD ONLY
    depends_on:
      - mongo
    expose:
      - "3000"
    ports:
      - 3000:3000
    networks:
      - services
      - proxy

  ## COLLECT, STOCK & EXPOSE ALL TELEMETRICS
  telemetry:
    build: ./service-telemetry
    image: boxb/telemetry
    restart: unless-stopped
    container_name: telemetry
    environment:
      - PORT=3004
      - PROBE_HOST=metrics-probe # Todo : Change with proper service
      - PROBE_PORT=3013 # Todo : Change with proper service
      - STAGE_HOST=metrics-stage # Todo : Change with proper service
      - STAGE_PORT=3023 # Todo : Change with proper service
      - BOOSTER_HOST=metrics-booster # Todo : Change with proper service
      - BOOSTER_PORT=3033 # Todo : Change with proper service
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=blue_origin
    volumes:
      - ./service-telemetry/src/:/app/src/ # FOR HOT RELOAD ONLY
    depends_on:
      - mongo
    expose:
      - "3004"
    ports:
      - 3004:3004
    networks:
      - services
      - proxy
      - modules

  ## ROCKET HQ
  rocket:
    build: ./service-rocket
    image: boxb/rocket
    restart: unless-stopped
    container_name: rocket
    environment:
      - PORT=3001
      - SOCKET_PORT=30011
      - MISSION_HOST=mission
      - MISSION_PORT=3002
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=blue_origin
      - PROBE_HOST=actions-probe # Todo : Change with proper service
      - PROBE_PORT=3015 # Todo : Change with proper service
      - STAGE_HOST=actions-stage # Todo : Change with proper service
      - STAGE_PORT=3025 # Todo : Change with proper service
      - BOOSTER_HOST=actions-booster # Todo : Change with proper service
      - BOOSTER_PORT=3035 # Todo : Change with proper service
    volumes:
      - ./service-rocket/src/:/app/src/ # FOR HOT RELOAD ONLY
    depends_on:
      - mongo
    expose:
      - "3001"
    ports:
      - 3001:3001
    networks:
      - services
      - proxy
      - modules

  ## SEND POOLS & START MISSION
  mission:
    build: ./service-mission
    image: boxb/mission
    container_name: mission
    restart: unless-stopped
    environment:
      - PORT=3002
      - ROCKET_HOST=rocket
      - ROCKET_PORT=3001
      - WEATHER_HOST=weather
      - WEATHER_PORT=3000
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=blue_origin
    volumes:
      - ./service-mission/src/:/app/src/ # FOR HOT RELOAD ONLY
    depends_on:
      - mongo
    expose:
      - "3002"
    ports:
      - 3002:3002
    networks:
      - services
      - proxy

  ## DATABASE FOR TELEMETRY, POLLS & ACTIONS HISTORY (WIP)
  mongo:
    image: mongo:latest
    container_name: boxb-mongo
    restart: unless-stopped
    environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: toor
      - MONGODB_DATABASE="blue_origin"
    expose:
      - 27017
    ports:
      - 27017:27017
    networks:
      - services

  ## REVERSE PROXY
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./reverse_proxy.conf:/etc/nginx/nginx.conf
    networks:
      - proxy
    ports:
      - 80:80
    depends_on:
      - mongo
      - rocket
      - mission
      - weather
      - telemetry

  ## MODULES
  metrics-probe:
    build: ./service-module-metrics
    image: boxb/module-metrics
    restart: unless-stopped
    container_name: module-metrics-probe
    environment:
      - PORT=3003
#      - MONGO_HOST=mongo
#      - MONGO_PORT=27017
#      - MONGO_DB=blue_origin
    volumes:
    - ./analog-mock.json:/etc/analog-mock.json # FOR ANALOGIQUE MODULE STATUS ONLY
    depends_on:
      - mongo
    expose:
      - "3003"
    ports:
      - 3013:3003
    networks:
      - modules

  metrics-stage:
      build: ./service-module-metrics
      image: boxb/module-metrics
      restart: unless-stopped
      container_name: module-metrics-stage
      environment:
        - PORT=3003
  #      - MONGO_HOST=mongo
  #      - MONGO_PORT=27017
  #      - MONGO_DB=blue_origin
      volumes:
      - ./analog-mock.json:/etc/analog-mock.json # FOR ANALOGIQUE MODULE STATUS ONLY
      depends_on:
        - mongo
      expose:
        - "3003"
      ports:
        - 3023:3003
      networks:
        - modules

  metrics-booster:
      build: ./service-module-metrics
      image: boxb/module-metrics
      restart: unless-stopped
      container_name: module-metrics-booster
      environment:
        - PORT=3003
  #      - MONGO_HOST=mongo
  #      - MONGO_PORT=27017
  #      - MONGO_DB=blue_origin
      volumes:
      - ./analog-mock.json:/etc/analog-mock.json # FOR ANALOGIQUE MODULE STATUS ONLY
      depends_on:
        - mongo
      expose:
        - "3003"
      ports:
        - 3033:3003
      networks:
        - modules

  actions-probe:
    build: ./service-module-actions
    image: boxb/module-actions
    restart: unless-stopped
    container_name: module-actions-probe
    environment:
      - PORT=3005
#      - MONGO_HOST=mongo
#      - MONGO_PORT=27017
#      - MONGO_DB=blue_origin
    volumes:
      - ./analog-mock.json:/etc/analog-mock.json # FOR ANALOGIQUE MODULE STATUS ONLY
    depends_on:
      - mongo
    expose:
      - "3005"
    ports:
      - 3015:3005
    networks:
      - modules

  actions-stage:
      build: ./service-module-actions
      image: boxb/module-actions
      restart: unless-stopped
      container_name: module-actions-stage
      environment:
        - PORT=3005
  #      - MONGO_HOST=mongo
  #      - MONGO_PORT=27017
  #      - MONGO_DB=blue_origin
      volumes:
        - ./analog-mock.json:/etc/analog-mock.json # FOR ANALOGIQUE MODULE STATUS ONLY
      depends_on:
        - mongo
      expose:
        - "3005"
      ports:
        - 3025:3005
      networks:
        - modules

  actions-booster:
      build: ./service-module-actions
      image: boxb/module-actions
      restart: unless-stopped
      container_name: module-actions-booster
      environment:
        - PORT=3005
  #      - MONGO_HOST=mongo
  #      - MONGO_PORT=27017
  #      - MONGO_DB=blue_origin
      volumes:
        - ./analog-mock.json:/etc/analog-mock.json # FOR ANALOGIQUE MODULE STATUS ONLY
      depends_on:
        - mongo
      expose:
        - "3005"
      ports:
        - 3035:3005
      networks:
        - modules
networks:
  services:
  proxy:
  modules:

